# -*- coding: utf-8 -*-

import sys
import re

libs = [
    'pthread',
    'pcre',
    'ssl',
    'crypto',
    'z',
]

if re.search('linux', sys.platform) != None:
    libs.append('crypt')

env = Environment(
    CPPPATH=['../src/core',
             '../src/auto',
             '../src/os/unix',
    ],
    CFLAGS=['-g',
            '-Wall',
            #'-O2',
            '-Wno-deprecated-declarations',
            '-Wno-unused-parameter',
    ],
    LIBS=libs,
)

targets = {
    "string" : ["string.c"],
    "regex"  : ["regex.c"],
    "pool"   : ["pool.c"],
    "temp"   : ["temp.c"],
    "version": ["version.c"],
    "parse"  : ["parse.c"],
    "array"  : ["array.c"],
    "md5"    : ["md5.c"],
    "sha1"   : ["sha1.c"],
    "crc32"  : ["crc32.c"],
    "base64" : ["base64.c"],
    "list"   : ["list.c"],
    "time"   : ["time.c"],
    "hash"   : ["hash.c"],
    }

if sys.platform == 'darwin':
    [ targets[target].append('../libngxcore.dylib') for target in targets ]
elif re.search('linux', sys.platform) != None:
    [ targets[target].append('../libngxcore.a') for target in targets ]
else:
    print sys.platform + " is not supported"
    sys.exit(1)

[ env.Program(target, targets[target]) for target in targets ]
